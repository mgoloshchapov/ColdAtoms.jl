var documenterSearchIndex = {"docs":
[{"location":"library/#ColdAtoms.jl-Documentation","page":"API","title":"ColdAtoms.jl Documentation","text":"","category":"section"},{"location":"library/","page":"API","title":"API","text":"Modules = [ColdAtoms]\nPages = [\"basic_experiments.jl\", \"rydberg_model.jl\"]","category":"page"},{"location":"library/#ColdAtoms.release_evolve-NTuple{4, Any}","page":"API","title":"ColdAtoms.release_evolve","text":"release_evolve(tspan, cord, atom_params, trap_params; eps=1e-3)\n\nSimulates evolution of atoms after turning the trap off and recapture results\n\nInput\n\ntspan – vector specifying the points of time for which output should be displayed\ncord – vector of initial coordiantes and velocities xyzv_xv_yv_z\natom_params – vector [atom mass in a.u., atom temperature in mu K]\ntrap_params – vector [trap depth U_0 in mu K, beam waist radius in mu m, beam Rayleigh length in mu m]\neps – (optional, default: 1e-3) cutoff to regularize Metropolis sampler, atoms that have energy over U_0(1-eps) are considered to be out of trap\n\nOutput\n\nBinary list of length tspan, which contains 1 at idx i if atom is recaptured at tspan[i]  and 0 otherwise\n\n\n\n\n\n","category":"method"},{"location":"library/#ColdAtoms.release_recapture-NTuple{4, Any}","page":"API","title":"ColdAtoms.release_recapture","text":"release_recapture(tspan, trap_params, atom_params, N; freq=10, skip=1000, eps=1e-3, harmonic=true)\n\nSimulate release and recapture experiment to estimate atom's temperature.\n\nInput\n\ntspan – vector specifying the points of time for which output should be displayed\ntrap_params – vector [trap depth U_0 in mu K, beam waist radius in mu m, beam Rayleigh length in mu m]\natom_params – vector [atom mass in a.u., atom temperature in mu K]\nN – number of Monte-Carlo samples, the same as number of atoms\nfreq – (optional, default: 10) number of Metropolis steps skipped between samples to reduce sample dependency\nskip – (optional, default: 1000) number of Metropolis steps skipped before the Markov Chain is considered to reach stationary distribution\neps – (optional, default: 1e-3) cutoff to regularize Metropolis sampler, atoms that have energy over U_0(1-eps) are considered to be out of trap\nharmonic – (optional, default: true) uses harmonic approximation of gaussian beam if set to true, otherwise uses Metropolis sampler\n\nOutput\n\nList of recapture probabilities corresponding to times in tspan and acceptance rate of Metropolis algorithm.  If harmonic is set to true, acceptance rate is set to 1.0\n\n\n\n\n\n","category":"method"},{"location":"library/#ColdAtoms.simulation-NTuple{12, Any}","page":"API","title":"ColdAtoms.simulation","text":"simulation(\n    tspan, ψ0, \n    atom_params,\n    trap_params,\n    samples,\n    f,\n    red_laser_phase_amplitudes,\n    blue_laser_phase_amplitudes,\n    red_laser_params,\n    blue_laser_params,\n    detuning_params,\n    decay_params;\n    atom_motion=true,\n    free_motion=true,\n    laser_noise=true,\n    spontaneous_decay=true,\n    parallel=false\n    )\n\nSimulate two-photon Rydberg excitation of single atom with several sources of decoherence\n\nInput\n\ntspan – vector specifying the points of time for which output should be displayed\nψ0 – initial wavefunction vector of normalized complex amplitudes c_g c_p c_r\natom_params – vector [atom mass in a.u., atom temperature in mu K]\ntrap_params – vector [trap depth U_0 in mu K, beam waist radius in mu m, beam Rayleigh length in mu m]\nsamples – Monte-Carlo samples of initial atom coordinates and velocities, can be received using samples_generate\nf – frequencies at which laser phase noise is sampled\nred_laser_phase_amplitudes – amplitudes of red laser phase noise for correspoding frequencies f\nblue_laser_phase_amplitudes – amplitudes of blue laser phase noise for correspoding frequencies f\nred_laser_params – write explanation\nblue_laser_params – write explanation\ndetuning_params – vector [Δ0, δ0], which sets detuning from intermediate level and Rydberg level correspondingly\ndecay_params – write explanation\natom_motion – (optional, default: true) if set to true, atom motion is included\nfree_motion – (optional, default: true) if set to true, trap is turned off\nlaser_noise – (optional, default: true) if set to true, laser phase noise is included\nspontaneous_decay – (optional, default: true) if set to true, spontaneous decay from intermediate level is included\nparallel – (optional, default: false) parallel implementation is under development\n\nOutput\n\nOutputs Monte-Carlo averaged density matrix and squared density matrix for error calculation with elements ordered in correspondence with order ground, intermediate, Rydberg\n\n\n\n\n\n","category":"method"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Release-and-recapture-experiment","page":"Examples","title":"Release and recapture experiment","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Release and recapture method is used to measure temperature of single neutral atom in optical trap formed by gaussian beam. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The trap is turned off by a variable amount of time and probability to recapture atom is measured. If we know atom mass and trap parameters, we can extract atom temperature by comparing experimental release and recapture curve with the modelling.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using ColdAtoms\nusing Plots\n\n# Atom and trap parameters\nU0, w0, λ, M2 = 1000.0, 1.1, 0.852, 1.3;\nz0 = w0_to_z0(w0, λ, M2);\nm, T = 86.9091835, 50.0;\ntrap_params = [U0, w0, z0];\natom_params = [m, T];\n\n# Simulation parameters\ntspan = [0.0:1.0:50.0;];\nN = 10000 \n\n# Calculate recapture probabilities\nprobs, acc_rate = release_recapture(\n    tspan, \n    trap_params, \n    atom_params, \n    N; \n    harmonic=false);\n\n# Plot release and recapture curve\nplot(tspan, probs, label=false, width=3, color=\"red\")\nxlims!(0.0, 50.0)\nylims!(0.0, 1.05)\nxlabel!(\"Time, μs\")\nylabel!(\"Recapture probability\")","category":"page"},{"location":"examples/#Two-photon-Rydberg-excitation","page":"Examples","title":"Two-photon Rydberg excitation","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Two-photon Rydberg excitation is used, for example, to implement native CZ gate on neutral atom quantum computers. Here we implement modelling of two-photon Rydberg excitation with different sources of decoherence: atom dynamics, laser phase noise, spontaneous decay from intermediate state. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using ColdAtoms\nusing QuantumOptics\nusing Plots\n\n\n#Rb87 mass in a.u.\nm = 86.9091835;       \n\n#Params for laser phase noise\nh0 = 13.0 * 1e-6;    #MHz^2/MHz\nhg1 = 25.0 * 1e-6;   #MHz^2/MHz\nhg2 = 10.0e3 * 1e-6; #MHz^2/MHz\nfg1 = 130.0 * 1e-3;  #MHz\nfg2 = 234.0 * 1e-3;  #MHz\nσg1 = 18.0 * 1e-3;   #MHz\nσg2 = 1.5 * 1e-3;    #MHz\n\nred_laser_phase_params  = [h0, [hg1, hg2], [σg1, σg2], [fg1, fg2]];\nblue_laser_phase_params = [h0, [hg1, hg2], [σg1, σg2], [fg1, fg2]];\nf = [0.01:0.0025:1.0;];\nred_laser_phase_amplitudes = ϕ_amplitudes(f, red_laser_phase_params);\nblue_laser_phase_amplitudes = ϕ_amplitudes(f, blue_laser_phase_params);\n\n#Excitation beam parameters\nλr = 0.795;\nλb = 0.475;\nwr = 10.0;\nwb = 3.5;\nzr = w0_to_z0(wr, λr);\nzb = w0_to_z0(wr, λb);\n\n# Atom and trap parameters\nT = 50.0;\nU0 = 1000.0;\nw0 = 1.1;\nλ0 = 0.813;\nM2 = 1.3;\nz0 = w0_to_z0(w0, λ0, M2);\natom_params = [m, T];\ntrap_params = [U0, w0, z0];\n\n#Rabi frequencies\nΔ0 = 2.0*π * 904.0;\nΩr = 2π * 60.0;\nΩb = 2π * 60.0;\nblue_laser_params = [Ωb, wb, zb];\nred_laser_params = [Ωr, wr, zr];\n\n# Detunings and decay params\ndetuning_params = [Δ0, δ_twophoton(Ωr, Ωb, Δ0)];\nΓ = 2.0*π * 6.0;\ndecay_params = [Γ/4, 3*Γ/4];\n\n# Period of Rabi oscillations\nT0 = T_twophoton(Ωr, Ωb, Δ0);\n# Simulation time\ntspan = [0.0:T0/30:2.5*T0;];\n# Initial wavefunction\nψ0 = g;\n\n\n\n# # Get initial atom coordinates and velocities\nN = 200;\nsamples, acc_rate = samples_generate(trap_params, atom_params, N; skip=5000, freq=1000);\n\n\n\n# Calculate density matrix and it's squared values to estimate errors\nρ_mean, ρ2_mean = \n    simulation(\n        tspan, ψ0, \n        \n        atom_params,\n        trap_params,\n        samples,\n        \n        f,\n        red_laser_phase_amplitudes,\n        blue_laser_phase_amplitudes,\n        \n        red_laser_params,\n        blue_laser_params,\n        \n        detuning_params,\n        decay_params;\n        \n        spontaneous_decay=true,\n        atom_motion=true,\n        laser_noise=true,\n        parallel=false,\n        free_motion=true\n    );\n\n# Take average of state populations over density matrix\nPg = real(expect(g ⊗ dagger(g), ρ_mean)); \nPp = real(expect(p ⊗ dagger(p), ρ_mean)); \nPr = real(expect(r ⊗ dagger(r), ρ_mean));\n\n\n\n# Plot Rabi oscillations\nplot(\n    tspan, \n    [Pg Pp Pr], \n    label=[\"Ground\" \"Intermediate\" \"Rydberg\"], \n    width=[3 3 3], \n    color=[\"blue\" \"gray\" \"red\"]\n    )\nplot!(legend=:outertop, legendcolumns=3)\ntitle!(\"State populations\")\nxlims!(0.0, maximum(tspan))\nylims!(0.0, 1.05)\nxlabel!(\"Time, μs\")\nylabel!(\"Probability\")","category":"page"},{"location":"#ColdAtoms.jl","page":"Home","title":"ColdAtoms.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: docs)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package provides a set of tools to simulate experiments with neutral atoms. ","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Paste the following line into the Julia REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"]add \"https://github.com/mgoloshchapov/ColdAtoms.jl\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"or","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg; Pkg.add(PackageSpec(url=\"https://github.com/mgoloshchapov/ColdAtoms.jl\"))","category":"page"},{"location":"#Package-features","page":"Home","title":"Package features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Simulation of two-photon Rydberg excitation with different sources of decoherence: atom motion, laser phase noise, intermediate state decay\nSimulation of release and recapture experiment","category":"page"}]
}
